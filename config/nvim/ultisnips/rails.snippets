#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt

#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#		snippet trigger_word [ "description" [ options ] ]
#		endsnippet

priority -49

###########################################################################
#                            UltiSnips Snippets                           #
###########################################################################

snippet pry "binding pry" b
binding.pry
endsnippet

snippet link "link_to" b
link_to ${1:text}, ${2:path}
endsnippet

snippet Controller "Rails controller" b
# frozen_string_literal: true

class ${1}Controller < ${2:PublicBaseController}
	${0}

	def index

	end

	def show

	end
end
endsnippet

snippet Model "Rails model" b
# frozen_string_literal: true

module ${1} < ${2:ApplicationRecord}
	${0}
end
endsnippet

snippet scope "scope" b
scope :${1}, -> { ${0} }
endsnippet

snippet scope:block "scope block" b
scope :{1}, -> do
  ${0}
end
endsnippet

snippet pg_search_scope "Postgres search scope" b
pg_search_scope :${1:by_query},
                ${2:against: { title: "A", },}
                ${3:associated_against: { articles: %i[code title] },}
                ${4:ignoring: :accents,}
                ${5:using: { tsearch: { prefix: true } }}
endsnippet

snippet title "Title transformation"
${1/\w+\s*/\u$0/}
endsnippet

snippet anaf "accepts_nested_attributes_for"
accepts_nested_attributes_for :${1:association_name}${2:${3:, allow_destroy: true}${4:, reject_if: proc \{ |obj| ${5:obj.blank?} \}}}
endsnippet

snippet has_many "has many dependent" b
has_many :${1}, -> { ${2} }, ${3}, class_name: "${0}"
endsnippet

snippet has_and_belongs_to_many "has many" b
has_and_belongs_to_many :${1}, -> { ${2} }, ${3}
endsnippet

snippet dependent "has many dependent"
dependent: destroy
endsnippet

snippet validates "validates" b
validates :${1}, ${0},
          presence: true
endsnippet

snippet validates:presence "validates presence" b
validates_presence_of :${1}
endsnippet

snippet validates:uniqueness "validates uniqueness" b
validates_uniqueness_of :${1}, scope: :${0}
endsnippet

snippet "(\S+)?\ in[clusion]?" "validates inclusion" r
inclusion: { in: ${1} }
endsnippet

snippet add_column "Migration Add Column"
add_column :${1:table}, :${2:column}
endsnippet

snippet remove_column "Migration Remove Column"
remove_column :${1:table}, :${2:column}
endsnippet

snippet try "try"
try(:${0})
endsnippet

snippet map "try"
try(:${0})
endsnippet
